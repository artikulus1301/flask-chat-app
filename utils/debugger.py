"""
debugger.py ‚Äî —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π –¥–µ–±–∞–≥–≥–µ—Ä Flask + SocketIO + SQLAlchemy
–ü–æ–∑–≤–æ–ª—è–µ—Ç –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å –∑–∞–ø—Ä–æ—Å—ã, —Å–æ–±—ã—Ç–∏—è, –æ—à–∏–±–∫–∏ –∏ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ë–î.
"""

import logging
import time
from flask import request
from app import db, socketio

# === –ù–ê–°–¢–†–û–ô–ö–ê –õ–û–ì–ì–ï–†–ê ===
logger = logging.getLogger("FlaskDebugger")
logger.setLevel(logging.DEBUG)

console = logging.StreamHandler()
console.setFormatter(logging.Formatter(
    "[%(asctime)s] [%(levelname)s] %(message)s",
    "%Y-%m-%d %H:%M:%S"
))
logger.addHandler(console)


# === –õ–û–ì–ò–†–û–í–ê–ù–ò–ï HTTP-–ó–ê–ü–†–û–°–û–í ===
def init_request_debugger(app):
    """–ü–µ—Ä–µ—Ö–≤–∞—Ç—ã–≤–∞–µ—Ç –∫–∞–∂–¥—ã–π –∑–∞–ø—Ä–æ—Å –∏ –≤—ã–≤–æ–¥–∏—Ç –µ–≥–æ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –≤ –∫–æ–Ω—Å–æ–ª—å"""

    @app.before_request
    def before_request():
        request.start_time = time.time()
        logger.debug(f"‚û°Ô∏è  {request.method} {request.path} ‚Äî args={dict(request.args)} json={request.get_json(silent=True)}")

    @app.after_request
    def after_request(response):
        duration = time.time() - getattr(request, 'start_time', time.time())
        logger.debug(f"‚¨ÖÔ∏è  {response.status} ({duration:.3f}s) ‚Äî {request.path}")
        return response

    @app.teardown_request
    def teardown_request(exception):
        if exception:
            logger.error(f"üî• Exception during request: {exception}")


# === –õ–û–ì–ò–†–û–í–ê–ù–ò–ï –°–û–ë–´–¢–ò–ô SOCKET.IO ===
def init_socket_debugger(socketio):
    """–ü–µ—Ä–µ—Ö–≤–∞—Ç—ã–≤–∞–µ—Ç —Å–æ–±—ã—Ç–∏—è Socket.IO"""
    @socketio.on('connect')
    def on_connect():
        logger.info(f"üü¢ Socket connected: {request.sid}")

    @socketio.on('disconnect')
    def on_disconnect():
        logger.info(f"üî¥ Socket disconnected: {request.sid}")

    @socketio.on_error()
    def on_error(e):
        logger.error(f"‚ö†Ô∏è SocketIO error: {e}")


# === –õ–û–ì–ò–†–û–í–ê–ù–ò–ï SQLAlchemy ===
def init_db_debugger(app):
    """–í–∫–ª—é—á–∞–µ—Ç –ø–æ–¥—Ä–æ–±–Ω—ã–π SQL-–ª–æ–≥"""
    logging.getLogger('sqlalchemy.engine').setLevel(logging.INFO)
    logging.getLogger('sqlalchemy.engine').addHandler(console)
    logger.info("üß© SQLAlchemy query logging enabled")


# === –ì–õ–ê–í–ù–ê–Ø –¢–û–ß–ö–ê –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–ò ===
def init_debugger(app):
    """–ê–∫—Ç–∏–≤–∏—Ä—É–µ—Ç –≤—Å–µ –¥–µ–±–∞–≥-—Ñ—É–Ω–∫—Ü–∏–∏"""
    init_request_debugger(app)
    init_db_debugger(app)
    init_socket_debugger(socketio)
    logger.info("‚úÖ Flask Debugger initialized successfully!")
